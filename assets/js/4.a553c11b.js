(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{52:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"schemamodel"}},[t._v("schemaModel")]),s("h3",{attrs:{id:"参考schema定义"}},[t._v("参考schema定义")]),s("ul",[s("li",[t._v("$schema\t$schema 关键字状态，表示这个模式与v4规范草案书写一致。")]),s("li",[t._v("title\t用它给我们的模式提供了标题。")]),s("li",[t._v("description\t关于模式的描述。")]),s("li",[t._v("type\ttype 关键字在我们的JSON数据上定义了第一个约束：必须是一个JSON对象。")]),s("li",[t._v("properties\t定义各种键和他们的值类型，以及用于JSON文件中的最小值和最大值。")]),s("li",[t._v("required\t存放必要属性列表。")]),s("li",[t._v("minimum\t给值设置的约束条件，表示可以接受的最小值。")]),s("li",[t._v("exclusiveMinimum\t如果存在”exclusiveMinimum”并且具有布尔值true，如果它严格意义上大于”minimum”的值则实例有效。")]),s("li",[t._v("maximum\t给值设置的约束条件，表示可以接受的最大值。")]),s("li",[t._v("exclusiveMaximum\t如果存在”exclusiveMinimum”并且具有布尔值true，如果它严格意义上小于”maximum” 的值则实例有效。")]),s("li",[t._v("multipleOf\t如果通过这个关键字的值分割实例的结果是一个数字则表示紧靠”multipleOf”的数字实例是有效的。")]),s("li",[t._v("maxLength\t字符串实例字符的最大长度数值。")]),s("li",[t._v("minLength\t字符串实例字符的最小长度数值。")]),s("li",[t._v("pattern\t如果正则表达式匹配实例成功则字符串实例被认为是有效的。")])]),s("h3",{attrs:{id:"初始化对象"}},[t._v("初始化对象")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Model "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("SchemaModel")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n field1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n field2"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),s("h3",{attrs:{id:"属性"}},[t._v("属性")]),s("ul",[s("li",[t._v("SchemaModel: "),s("code",[t._v("{ key?: validKey ,value?: validFunc }")])])]),s("p",[t._v("定义一个基本的SchemaMode对象，传入参数为基本的Validator校验"),s("code",[t._v("key-value")]),t._v(",返回结果为Boolean类型")])])}],!1,null,null,null);e.default=n.exports}}]);